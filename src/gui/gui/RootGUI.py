# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Wed Jan 22 13:00:28 2014
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class RootGUI(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: RootGUI.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.rf_statusbar = self.CreateStatusBar(0, wx.ST_SIZEGRIP)
        self.calcTree = wx.TreeCtrl(self, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_HIDE_ROOT | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
        self.typeRBox = wx.RadioBox(self, wx.ID_ANY, "Type", choices=[".FDF", ".ANI", ".output", "pdos.xml"], majorDimension=4, style=wx.RA_SPECIFY_COLS)
        self.downBtn = wx.Button(self, wx.ID_ANY, ">>")
        self.upBtn = wx.Button(self, wx.ID_ANY, "<<")
        self.static_line_1 = wx.StaticLine(self, wx.ID_ANY)
        self.getDataBtn = wx.Button(self, wx.ID_ANY, "Get calc data")
        self.enqueueBtn = wx.Button(self, wx.ID_ANY, "Enqueue job")
        self.static_line_2 = wx.StaticLine(self, wx.ID_ANY)
        self.animateBtn = wx.Button(self, wx.ID_ANY, "Animations")
        self.calcList = wx.ListCtrl(self, wx.ID_ANY, style=wx.LC_REPORT | wx.SUNKEN_BORDER)
        self.noteBook = wx.Notebook(self, wx.ID_ANY, style=0)
        self.noteBook_panel_1 = wx.Panel(self.noteBook, wx.ID_ANY, style=wx.DOUBLE_BORDER | wx.TAB_TRAVERSAL)
        self.propType = wx.Choice(self.noteBook_panel_1, wx.ID_ANY, choices=[])
        self.propChoice = wx.Choice(self.noteBook_panel_1, wx.ID_ANY, choices=[])
        self.noteBook_panel_2 = wx.Panel(self.noteBook, wx.ID_ANY)
        self.xCorr = wx.Choice(self.noteBook_panel_2, wx.ID_ANY, choices=[])
        self.yCorr = wx.Choice(self.noteBook_panel_2, wx.ID_ANY, choices=[])
        self.optionsBtn = wx.Button(self, wx.ID_ANY, "Options")
        self.plotBtn = wx.Button(self, wx.ID_ANY, "Plot")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TREE_SEL_CHANGED, self.onSelChange, self.calcTree)
        self.Bind(wx.EVT_RADIOBOX, self.typeChange, self.typeRBox)
        self.Bind(wx.EVT_BUTTON, self.downBtnPress, self.downBtn)
        self.Bind(wx.EVT_BUTTON, self.upBtnPress, self.upBtn)
        self.Bind(wx.EVT_BUTTON, self.getDataBtnPress, self.getDataBtn)
        self.Bind(wx.EVT_BUTTON, self.enqueueBtnPress, self.enqueueBtn)
        self.Bind(wx.EVT_BUTTON, self.animateBtnPress, self.animateBtn)
        self.Bind(wx.EVT_CHOICE, self.propTypeChange, self.propType)
        self.Bind(wx.EVT_BUTTON, self.optionsBtnPress, self.optionsBtn)
        self.Bind(wx.EVT_BUTTON, self.plotBtnPress, self.plotBtn)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: RootGUI.__set_properties
        self.SetTitle("Siesta help scripts GUI")
        self.SetSize((820, 505))
        self.rf_statusbar.SetStatusWidths([])
        # statusbar fields
        rf_statusbar_fields = []
        for i in range(len(rf_statusbar_fields)):
            self.rf_statusbar.SetStatusText(rf_statusbar_fields[i], i)
        self.typeRBox.SetSelection(1)
        self.enqueueBtn.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: RootGUI.__do_layout
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        rightSizer = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        middleSizer = wx.BoxSizer(wx.VERTICAL)
        leftSizer = wx.BoxSizer(wx.VERTICAL)
        leftSizer.Add(self.calcTree, 1, wx.EXPAND, 2)
        leftSizer.Add(self.typeRBox, 0, wx.EXPAND, 5)
        sizer_1.Add(leftSizer, 1, wx.ALL | wx.EXPAND, 5)
        middleSizer.Add(self.downBtn, 0, wx.ALL | wx.EXPAND, 2)
        middleSizer.Add(self.upBtn, 0, wx.ALL | wx.EXPAND, 2)
        middleSizer.Add(self.static_line_1, 0, wx.EXPAND, 0)
        middleSizer.Add(self.getDataBtn, 0, wx.ALL | wx.EXPAND, 2)
        middleSizer.Add(self.enqueueBtn, 0, wx.ALL | wx.EXPAND, 2)
        middleSizer.Add(self.static_line_2, 0, wx.EXPAND, 0)
        middleSizer.Add(self.animateBtn, 0, wx.ALL | wx.EXPAND, 2)
        sizer_1.Add(middleSizer, 0, wx.EXPAND, 0)
        rightSizer.Add(self.calcList, 2, wx.ALL | wx.EXPAND, 2)
        sizer_4.Add(self.propType, 1, wx.ALL | wx.EXPAND, 2)
        sizer_4.Add(self.propChoice, 1, wx.ALL | wx.EXPAND, 2)
        self.noteBook_panel_1.SetSizer(sizer_4)
        sizer_5.Add(self.xCorr, 1, wx.ALL | wx.EXPAND, 2)
        sizer_5.Add(self.yCorr, 1, wx.ALL | wx.EXPAND, 2)
        self.noteBook_panel_2.SetSizer(sizer_5)
        self.noteBook.AddPage(self.noteBook_panel_1, "Properties")
        self.noteBook.AddPage(self.noteBook_panel_2, "Correlations")
        rightSizer.Add(self.noteBook, 0, wx.ALL | wx.EXPAND, 2)
        sizer_2.Add(self.optionsBtn, 1, wx.ADJUST_MINSIZE, 2)
        sizer_2.Add(self.plotBtn, 1, wx.ADJUST_MINSIZE, 2)
        rightSizer.Add(sizer_2, 0, wx.EXPAND, 2)
        sizer_1.Add(rightSizer, 1, wx.ALL | wx.EXPAND, 5)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def onSelChange(self, event):  # wxGlade: RootGUI.<event_handler>
        print "Event handler 'onSelChange' not implemented!"
        event.Skip()

    def typeChange(self, event):  # wxGlade: RootGUI.<event_handler>
        print "Event handler 'typeChange' not implemented!"
        event.Skip()

    def downBtnPress(self, event):  # wxGlade: RootGUI.<event_handler>
        print "Event handler 'downBtnPress' not implemented!"
        event.Skip()

    def upBtnPress(self, event):  # wxGlade: RootGUI.<event_handler>
        print "Event handler 'upBtnPress' not implemented!"
        event.Skip()

    def getDataBtnPress(self, event):  # wxGlade: RootGUI.<event_handler>
        print "Event handler 'getDataBtnPress' not implemented!"
        event.Skip()

    def enqueueBtnPress(self, event):  # wxGlade: RootGUI.<event_handler>
        print "Event handler 'enqueueBtnPress' not implemented!"
        event.Skip()

    def animateBtnPress(self, event):  # wxGlade: RootGUI.<event_handler>
        print "Event handler 'animateBtnPress' not implemented!"
        event.Skip()

    def propTypeChange(self, event):  # wxGlade: RootGUI.<event_handler>
        print "Event handler 'propTypeChange' not implemented!"
        event.Skip()

    def optionsBtnPress(self, event):  # wxGlade: RootGUI.<event_handler>
        print "Event handler 'optionsBtnPress' not implemented!"
        event.Skip()

    def plotBtnPress(self, event):  # wxGlade: RootGUI.<event_handler>
        print "Event handler 'plotBtnPress' not implemented!"
        event.Skip()

# end of class RootGUI
